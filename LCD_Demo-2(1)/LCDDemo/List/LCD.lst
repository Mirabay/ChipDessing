
AVRASM ver. 2.1.30  C:\cvavr\LCDDemo\List\LCD.asm Mon Feb 13 22:06:06 2017

C:\cvavr\LCDDemo\List\LCD.asm(1090): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : No
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R5
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x3:
000034 0303
000035 0203
000036 0c02
000037 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000038 0100
000039 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x22:
00003a 0a00
00003b 1115
00003c 040a      	.DB  0x0,0xA,0x15,0x11,0xA,0x4
                 _0x23:
00003d 001f
00003e 001f
00003f 001f
C:\cvavr\LCDDemo\List\LCD.asm(1135): warning: .cseg .db misalignment - padding zero byte
000040 001f      	.DB  0x1F,0x0,0x1F,0x0,0x1F,0x0,0x1F
                 _0x0:
000041 694d
000042 7263
000043 736f
000044 5200      	.DB  0x4D,0x69,0x63,0x72,0x6F,0x73,0x0,0x52
000045 6c75
000046 7365
000047 0021      	.DB  0x75,0x6C,0x65,0x73,0x21,0x0
                 
                 __GLOBAL_INI_TBL:
000048 0006      	.DW  0x06
000049 0300      	.DW  _car0
00004a 0074      	.DW  _0x22*2
                 
00004b 0007      	.DW  0x07
00004c 0308      	.DW  _car1
00004d 007a      	.DW  _0x23*2
                 
                 _0xFFFFFFFF:
00004e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004f 94f8      	CLI
000050 27ee      	CLR  R30
000051 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000052 e0f1      	LDI  R31,1
000053 bff5      	OUT  MCUCR,R31
000054 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000055 e1f8      	LDI  R31,0x18
000056 95a8      	WDR
000057 b7a4      	IN   R26,MCUSR
000058 7fa7      	CBR  R26,8
000059 bfa4      	OUT  MCUSR,R26
00005a 93f0 0060 	STS  WDTCSR,R31
00005c 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e0a0      	LDI  R26,LOW(__SRAM_START)
000067 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000068 93ed      	ST   X+,R30
000069 9701      	SBIW R24,1
00006a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006b e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006d 9185      	LPM  R24,Z+
00006e 9195      	LPM  R25,Z+
00006f 9700      	SBIW R24,0
000070 f061      	BREQ __GLOBAL_INI_END
000071 91a5      	LPM  R26,Z+
000072 91b5      	LPM  R27,Z+
000073 9005      	LPM  R0,Z+
000074 9015      	LPM  R1,Z+
000075 01bf      	MOVW R22,R30
000076 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000077 9005      	LPM  R0,Z+
000078 920d      	ST   X+,R0
000079 9701      	SBIW R24,1
00007a f7e1      	BRNE __GLOBAL_INI_LOOP
00007b 01fb      	MOVW R30,R22
00007c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00007d e0e0      	LDI  R30,__GPIOR0_INIT
00007e bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007f efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000080 bfed      	OUT  SPL,R30
000081 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000082 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000083 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000084 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000085 940c 0154 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;   #asm
                     .equ __lcd_port=0x05
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0009    #endasm
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <display.h>
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
000087 972c      	SBIW R28,12
000088 e08c      	LDI  R24,12
000089 e0a0      	LDI  R26,LOW(0)
00008a e0b0      	LDI  R27,HIGH(0)
00008b e6e8      	LDI  R30,LOW(_0x3*2)
00008c e0f0      	LDI  R31,HIGH(_0x3*2)
00008d 940e 01a5 	CALL __INITLOCB
00008f 931a      	ST   -Y,R17
                 ;	TableSetup -> Y+1
                 ;	i -> R17
                 ; 0000 000D     SBI __lcd_port-1,__lcd_EN
000090 9a21          SBI __lcd_port-1,__lcd_EN
000091 9a20          SBI __lcd_port-1,__lcd_RS
000092 9a22          SBI __lcd_port-1,__lcd_D4
000093 9a23          SBI __lcd_port-1,__lcd_D5
000094 9a24          SBI __lcd_port-1,__lcd_D6
000095 9a25          SBI __lcd_port-1,__lcd_D7
000096 e3a2      	LDI  R26,LOW(50)
000097 e0b0      	LDI  R27,0
000098 940e 019b 	CALL _delay_ms
00009a e010      	LDI  R17,LOW(0)
                 _0x5:
00009b 301c      	CPI  R17,12
00009c f458      	BRSH _0x6
00009d d0e1      	RCALL SUBOPT_0x0
00009e 2fe1      	MOV  R30,R17
00009f e0f0      	LDI  R31,0
0000a0 01de      	MOVW R26,R28
0000a1 9611      	ADIW R26,1
0000a2 0fae      	ADD  R26,R30
0000a3 1fbf      	ADC  R27,R31
0000a4 91ac      	LD   R26,X
0000a5 d0dd      	RCALL SUBOPT_0x1
0000a6 5f1f      	SUBI R17,-1
0000a7 cff3      	RJMP _0x5
                 _0x6:
0000a8 e0ec      	LDI  R30,LOW(12)
0000a9 2e5e      	MOV  R5,R30
0000aa 2da5      	MOV  R26,R5
0000ab d021      	RCALL _WriteComandLCD
0000ac 8118      	LDD  R17,Y+0
0000ad 962d      	ADIW R28,13
0000ae 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000af 9a29          SBI __lcd_port,__lcd_EN  // EN=1;
0000b0 9829          CBI __lcd_port,__lcd_EN // EN=0;
0000b1 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000b2 93aa      	ST   -Y,R26
                 ;	dato -> Y+0
0000b3 81e8      	LD   R30,Y
0000b4 70e8      	ANDI R30,LOW(0x8)
0000b5 f011      	BREQ _0x7
0000b6 9a2d      	SBI __lcd_port,__lcd_D7
0000b7 c001      	RJMP _0x8
                 _0x7:
0000b8 982d      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000b9 81e8      	LD   R30,Y
0000ba 70e4      	ANDI R30,LOW(0x4)
0000bb f011      	BREQ _0x9
0000bc 9a2c      	SBI __lcd_port,__lcd_D6
0000bd c001      	RJMP _0xA
                 _0x9:
0000be 982c      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000bf 81e8      	LD   R30,Y
0000c0 70e2      	ANDI R30,LOW(0x2)
0000c1 f011      	BREQ _0xB
0000c2 9a2b      	SBI __lcd_port,__lcd_D5
0000c3 c001      	RJMP _0xC
                 _0xB:
0000c4 982b      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000c5 81e8      	LD   R30,Y
0000c6 70e1      	ANDI R30,LOW(0x1)
0000c7 f011      	BREQ _0xD
0000c8 9a2a      	SBI __lcd_port,__lcd_D4
0000c9 c001      	RJMP _0xE
                 _0xD:
0000ca 982a      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000cb 9621      	ADIW R28,1
0000cc 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000cd 93aa      	ST   -Y,R26
0000ce 931a      	ST   -Y,R17
                 ;	Comando -> Y+1
                 ;	tempComando -> R17
0000cf 9828      	CBI __lcd_port,__lcd_RS
0000d0 d0ae      	RCALL SUBOPT_0x0
0000d1 d0b3      	RCALL SUBOPT_0x2
0000d2 d0b9      	RCALL SUBOPT_0x3
0000d3 dfdb      	RCALL _PulseEn
0000d4 8118      	LDD  R17,Y+0
0000d5 c054      	RJMP _0x2000003
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
0000d6 93aa      	ST   -Y,R26
0000d7 931a      	ST   -Y,R17
                 ;	dato -> Y+1
                 ;	tempdato -> R17
0000d8 9a28      	SBI __lcd_port,__lcd_RS
0000d9 d0a5      	RCALL SUBOPT_0x0
0000da d0aa      	RCALL SUBOPT_0x2
0000db d0b0      	RCALL SUBOPT_0x3
0000dc dfd2      	RCALL _PulseEn
0000dd 8118      	LDD  R17,Y+0
0000de c04b      	RJMP _0x2000003
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
0000df 93ba      	ST   -Y,R27
0000e0 93aa      	ST   -Y,R26
0000e1 931a      	ST   -Y,R17
                 ;	i -> R17
0000e2 e010      	LDI  R17,LOW(0)
                 _0x10:
0000e3 2fe1      	MOV  R30,R17
0000e4 5f1f      	SUBI R17,-1
0000e5 81a9      	LDD  R26,Y+1
0000e6 81ba      	LDD  R27,Y+1+1
0000e7 d0aa      	RCALL SUBOPT_0x4
0000e8 2fe1      	MOV  R30,R17
0000e9 81a9      	LDD  R26,Y+1
0000ea 81ba      	LDD  R27,Y+1+1
0000eb e0f0      	LDI  R31,0
0000ec 0fea      	ADD  R30,R26
0000ed 1ffb      	ADC  R31,R27
0000ee 91e4      	LPM  R30,Z
0000ef 30e0      	CPI  R30,0
0000f0 f791      	BRNE _0x10
0000f1 8118      	LDD  R17,Y+0
0000f2 9623      	ADIW R28,3
0000f3 9508      	RET
                 ; .FEND
                 _StringLCD2:
                 ; .FSTART _StringLCD2
0000f4 93ba      	ST   -Y,R27
0000f5 93aa      	ST   -Y,R26
0000f6 931a      	ST   -Y,R17
                 ;	tiempo -> Y+1
                 ;	i -> R17
0000f7 e010      	LDI  R17,LOW(0)
                 _0x13:
0000f8 2fe1      	MOV  R30,R17
0000f9 5f1f      	SUBI R17,-1
0000fa 81ab      	LDD  R26,Y+3
0000fb 81bc      	LDD  R27,Y+3+1
0000fc d095      	RCALL SUBOPT_0x4
0000fd 81a9      	LDD  R26,Y+1
0000fe 81ba      	LDD  R27,Y+1+1
0000ff 940e 019b 	CALL _delay_ms
000101 2fe1      	MOV  R30,R17
000102 81ab      	LDD  R26,Y+3
000103 81bc      	LDD  R27,Y+3+1
000104 e0f0      	LDI  R31,0
000105 0fea      	ADD  R30,R26
000106 1ffb      	ADC  R31,R27
000107 91e4      	LPM  R30,Z
000108 30e0      	CPI  R30,0
000109 f771      	BRNE _0x13
00010a 8118      	LDD  R17,Y+0
00010b 9625      	ADIW R28,5
00010c 9508      	RET
                 ; .FEND
                 ;	Mensaje -> Y+1
                 ;	i -> R17
                 _MoveCursor:
                 ; .FSTART _MoveCursor
00010d 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
00010e 81e8      	LD   R30,Y
00010f e0f0      	LDI  R31,0
000110 9730      	SBIW R30,0
000111 f419      	BRNE _0x1B
000112 81a9      	LDD  R26,Y+1
000113 58a0      	SUBI R26,-LOW(128)
000114 c014      	RJMP _0x28
                 _0x1B:
000115 30e1      	CPI  R30,LOW(0x1)
000116 e0a0      	LDI  R26,HIGH(0x1)
000117 07fa      	CPC  R31,R26
000118 f419      	BRNE _0x1C
000119 81a9      	LDD  R26,Y+1
00011a 54a0      	SUBI R26,-LOW(192)
00011b c00d      	RJMP _0x28
                 _0x1C:
00011c 30e2      	CPI  R30,LOW(0x2)
00011d e0a0      	LDI  R26,HIGH(0x2)
00011e 07fa      	CPC  R31,R26
00011f f419      	BRNE _0x1D
000120 81a9      	LDD  R26,Y+1
000121 56ac      	SUBI R26,-LOW(148)
000122 c006      	RJMP _0x28
                 _0x1D:
000123 30e3      	CPI  R30,LOW(0x3)
000124 e0a0      	LDI  R26,HIGH(0x3)
000125 07fa      	CPC  R31,R26
000126 f419      	BRNE _0x1A
000127 81a9      	LDD  R26,Y+1
000128 52ac      	SUBI R26,-LOW(212)
                 _0x28:
000129 dfa3      	RCALL _WriteComandLCD
                 _0x1A:
                 _0x2000003:
00012a 9622      	ADIW R28,2
00012b 9508      	RET
                 ; .FEND
                 _UnderscoreCursor:
                 ; .FSTART _UnderscoreCursor
00012c e0e2      	LDI  R30,LOW(2)
00012d 2a5e      	OR   R5,R30
00012e c007      	RJMP _0x2000001
                 ; .FEND
                 _NoUnderscoreCursor:
                 ; .FSTART _NoUnderscoreCursor
00012f efed      	LDI  R30,LOW(253)
000130 c004      	RJMP _0x2000002
                 ; .FEND
                 _BlinkCursor:
                 ; .FSTART _BlinkCursor
000131 e0e1      	LDI  R30,LOW(1)
000132 2a5e      	OR   R5,R30
000133 c002      	RJMP _0x2000001
                 ; .FEND
                 _NoBlinkCursor:
                 ; .FSTART _NoBlinkCursor
000134 efee      	LDI  R30,LOW(254)
                 _0x2000002:
000135 225e      	AND  R5,R30
                 _0x2000001:
000136 2da5      	MOV  R26,R5
000137 df95      	RCALL _WriteComandLCD
000138 9508      	RET
                 ; .FEND
                 _CreateChar:
                 ; .FSTART _CreateChar
000139 93ba      	ST   -Y,R27
00013a 93aa      	ST   -Y,R26
00013b 931a      	ST   -Y,R17
                 ;	NoCaracter -> Y+3
                 ;	datos -> Y+1
                 ;	i -> R17
00013c 81eb      	LDD  R30,Y+3
00013d 0fee      	LSL  R30
00013e 0fee      	LSL  R30
00013f 0fee      	LSL  R30
000140 5ce0      	SUBI R30,-LOW(64)
000141 2fae      	MOV  R26,R30
000142 df8a      	RCALL _WriteComandLCD
000143 e010      	LDI  R17,LOW(0)
                 _0x20:
000144 3018      	CPI  R17,8
000145 f448      	BRSH _0x21
000146 81a9      	LDD  R26,Y+1
000147 81ba      	LDD  R27,Y+1+1
000148 27ee      	CLR  R30
000149 0fa1      	ADD  R26,R17
00014a 1fbe      	ADC  R27,R30
00014b 91ac      	LD   R26,X
00014c df89      	RCALL _CharLCD
00014d 5f1f      	SUBI R17,-1
00014e cff5      	RJMP _0x20
                 _0x21:
00014f e8a0      	LDI  R26,LOW(128)
000150 df7c      	RCALL _WriteComandLCD
000151 8118      	LDD  R17,Y+0
000152 9624      	ADIW R28,4
000153 9508      	RET
                 ; .FEND
                 ;
                 ;char car0[8]={0x00,0x0A,0x15,0x11,0x0A,0x04,0x00,0x00};
                 
                 	.DSEG
                 ;char car1[8]={0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00};
                 ;
                 ;void main()
                 ; 0000 0013 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0014     SetupLCD();
000154 940e 0087 	CALL _SetupLCD
                 ; 0000 0015     CreateChar(0,car0);
000156 e0e0      	LDI  R30,LOW(0)
000157 93ea      	ST   -Y,R30
000158 e0a0      	LDI  R26,LOW(_car0)
000159 e0b3      	LDI  R27,HIGH(_car0)
00015a dfde      	RCALL _CreateChar
                 ; 0000 0016     CreateChar(1,car1);
00015b e0e1      	LDI  R30,LOW(1)
00015c 93ea      	ST   -Y,R30
00015d e0a8      	LDI  R26,LOW(_car1)
00015e e0b3      	LDI  R27,HIGH(_car1)
00015f dfd9      	RCALL _CreateChar
                 ; 0000 0017 
                 ; 0000 0018     MoveCursor(5,0);
000160 e0e5      	LDI  R30,LOW(5)
000161 93ea      	ST   -Y,R30
000162 e0a0      	LDI  R26,LOW(0)
000163 dfa9      	RCALL _MoveCursor
                 ; 0000 0019     StringLCD("Micros");
                +
000164 e8a2     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000165 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000166 df78      	RCALL _StringLCD
                 ; 0000 001A     MoveCursor(5,1);
000167 e0e5      	LDI  R30,LOW(5)
000168 93ea      	ST   -Y,R30
000169 e0a1      	LDI  R26,LOW(1)
00016a dfa2      	RCALL _MoveCursor
                 ; 0000 001B     StringLCD2("Rules!",150);
                +
00016b e8e9     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
00016c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
00016d 93fa      	ST   -Y,R31
00016e 93ea      	ST   -Y,R30
00016f e9a6      	LDI  R26,LOW(150)
000170 e0b0      	LDI  R27,0
000171 df82      	RCALL _StringLCD2
                 ; 0000 001C     UnderscoreCursor();
000172 dfb9      	RCALL _UnderscoreCursor
                 ; 0000 001D     delay_ms(3000);
000173 d023      	RCALL SUBOPT_0x5
                 ; 0000 001E     NoUnderscoreCursor();
000174 dfba      	RCALL _NoUnderscoreCursor
                 ; 0000 001F     delay_ms(3000);
000175 d021      	RCALL SUBOPT_0x5
                 ; 0000 0020     BlinkCursor();
000176 dfba      	RCALL _BlinkCursor
                 ; 0000 0021     delay_ms(3000);
000177 d01f      	RCALL SUBOPT_0x5
                 ; 0000 0022     NoBlinkCursor();
000178 dfbb      	RCALL _NoBlinkCursor
                 ; 0000 0023     CharLCD(0);
000179 e0a0      	LDI  R26,LOW(0)
00017a df5b      	RCALL _CharLCD
                 ; 0000 0024     CharLCD(1);
00017b e0a1      	LDI  R26,LOW(1)
00017c df59      	RCALL _CharLCD
                 ; 0000 0025     while(1)
                 _0x24:
                 ; 0000 0026     {
                 ; 0000 0027     }
00017d cfff      	RJMP _0x24
                 ; 0000 0028 }
                 _0x27:
00017e cfff      	RJMP _0x27
                 ; .FEND
                 
                 	.DSEG
                 _car0:
000300           	.BYTE 0x8
                 _car1:
000308           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
00017f e0a2      	LDI  R26,LOW(2)
000180 e0b0      	LDI  R27,0
000181 940c 019b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000183 df2e      	RCALL _SendDataBitsLCD
000184 cf2a      	RJMP _PulseEn
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000185 81e9      	LDD  R30,Y+1
000186 7fe0      	ANDI R30,LOW(0xF0)
000187 2f1e      	MOV  R17,R30
000188 9512      	SWAP R17
000189 701f      	ANDI R17,0xF
00018a 2fa1      	MOV  R26,R17
00018b cff7      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00018c 81e9      	LDD  R30,Y+1
00018d 70ef      	ANDI R30,LOW(0xF)
00018e 2f1e      	MOV  R17,R30
00018f 2fa1      	MOV  R26,R17
000190 df21      	RCALL _SendDataBitsLCD
000191 cfed      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000192 e0f0      	LDI  R31,0
000193 0fea      	ADD  R30,R26
000194 1ffb      	ADC  R31,R27
000195 91a4      	LPM  R26,Z
000196 cf3f      	RJMP _CharLCD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000197 eba8      	LDI  R26,LOW(3000)
000198 e0bb      	LDI  R27,HIGH(3000)
000199 940c 019b 	JMP  _delay_ms
                 
                 
                 	.CSEG
                 _delay_ms:
00019b 9610      	adiw r26,0
00019c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00019d ef8a     +LDI R24 , LOW ( 0xFA )
00019e e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00019f 9701     +SBIW R24 , 1
0001a0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0001a1 95a8      	wdr
0001a2 9711      	sbiw r26,1
0001a3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001a4 9508      	ret
                 
                 __INITLOCB:
                 __INITLOCW:
0001a5 0fac      	ADD  R26,R28
0001a6 1fbd      	ADC  R27,R29
                 __INITLOC0:
0001a7 9005      	LPM  R0,Z+
0001a8 920d      	ST   X+,R0
0001a9 958a      	DEC  R24
0001aa f7e1      	BRNE __INITLOC0
0001ab 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   6 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   6 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  34 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  11 r25:   3 r26:  64 r27:  26 r28:  10 r29:   2 r30:  76 r31:  20 
x  :   6 y  :  52 z  :  11 
Registers used: 16 out of 35 (45.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   6 
adiw  :   8 and   :   1 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   6 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   4 
cbi   :   6 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   3 cpi   :   7 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   0 jmp   :  29 ld    :   7 ldd   :  25 ldi   :  64 
lds   :   0 lpm   :  14 lsl   :   3 lsr   :   0 mov   :  13 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   2 
ori   :   0 out   :   7 pop   :   0 push  :   0 rcall :  35 ret   :  10 
reti  :   0 rjmp  :  21 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :  12 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  26 std   :   0 sts   :   2 sub   :   0 subi  :   9 swap  :   1 
tst   :   0 wdr   :   2 
Instructions used: 37 out of 116 (31.9%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000358    802     54    856   32768   2.6%
[.dseg] 0x000100 0x000310      0     16     16    2048   0.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
