
AVRASM ver. 2.1.30  D:\ProyectosCodeVisión\Debug\List\Cronometro.asm Thu May 04 17:55:56 2023

D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1420): warning: Register r4 already defined by the .DEF directive
D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1421): warning: Register r3 already defined by the .DEF directive
D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1422): warning: Register r6 already defined by the .DEF directive
D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1423): warning: Register r5 already defined by the .DEF directive
D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1424): warning: Register r8 already defined by the .DEF directive
D:\ProyectosCodeVisión\Debug\List\Cronometro.asm(1425): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R4
                 	.DEF _min=R3
                 	.DEF _seg=R6
                 	.DEF _dec=R5
                 	.DEF _cont=R8
                 	.DEF _contF=R7
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0070 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00003d 0000
00003e 0000      	.DB  0x0,0x0,0x0,0x0
00003f 0002      	.DB  0x2,0x0
                 
                 _0x3:
000040 0303
000041 0203
000042 0c02
000043 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000044 0100
000045 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x22:
000046 0a0e
000047 040e
000048 150e
000049 0a04      	.DB  0xE,0xA,0xE,0x4,0xE,0x15,0x4,0xA
                 _0x23:
00004a 0e0e
00004b 040e
00004c 150e
00004d 0404      	.DB  0xE,0xE,0xE,0x4,0xE,0x15,0x4,0x4
                 _0x24:
00004e 0e0e
00004f 040e
000050 150e
000051 0404      	.DB  0xE,0xE,0xE,0x4,0xE,0x15,0x4,0x4
                 _0x25:
000052 0000
000053 0000
000054 0a00
000055 0404      	.DB  0x0,0x0,0x0,0x0,0x0,0xA,0x4,0x4
                 _0x0:
000056 3025
000057 6932
000058 253a
000059 3230      	.DB  0x25,0x30,0x32,0x69,0x3A,0x25,0x30,0x32
00005a 2e69
00005b 6925
00005c 2000
00005d 2020      	.DB  0x69,0x2E,0x25,0x69,0x0,0x20,0x20,0x20
00005e 2020
00005f 0020      	.DB  0x20,0x20,0x20,0x0
                 
                 __GLOBAL_INI_TBL:
000060 0006      	.DW  0x06
000061 0003      	.DW  0x03
000062 007a      	.DW  __REG_VARS*2
                 
000063 0008      	.DW  0x08
000064 0311      	.DW  _yo
000065 008c      	.DW  _0x22*2
                 
000066 0008      	.DW  0x08
000067 0319      	.DW  _yo2
000068 0094      	.DW  _0x23*2
                 
000069 0008      	.DW  0x08
00006a 0321      	.DW  _arbol
00006b 009c      	.DW  _0x24*2
                 
00006c 0008      	.DW  0x08
00006d 0329      	.DW  _flor
00006e 00a4      	.DW  _0x25*2
                 
                 _0xFFFFFFFF:
00006f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000070 94f8      	CLI
000071 27ee      	CLR  R30
000072 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000073 e0f1      	LDI  R31,1
000074 bff5      	OUT  MCUCR,R31
000075 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000076 e08d      	LDI  R24,(14-2)+1
000077 e0a2      	LDI  R26,2
000078 27bb      	CLR  R27
                 __CLEAR_REG:
000079 93ed      	ST   X+,R30
00007a 958a      	DEC  R24
00007b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007e e0a0      	LDI  R26,LOW(__SRAM_START)
00007f e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000080 93ed      	ST   X+,R30
000081 9701      	SBIW R24,1
000082 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000083 ece0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000084 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000085 9185      	LPM  R24,Z+
000086 9195      	LPM  R25,Z+
000087 9700      	SBIW R24,0
000088 f061      	BREQ __GLOBAL_INI_END
000089 91a5      	LPM  R26,Z+
00008a 91b5      	LPM  R27,Z+
00008b 9005      	LPM  R0,Z+
00008c 9015      	LPM  R1,Z+
00008d 01bf      	MOVW R22,R30
00008e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008f 9005      	LPM  R0,Z+
000090 920d      	ST   X+,R0
000091 9701      	SBIW R24,1
000092 f7e1      	BRNE __GLOBAL_INI_LOOP
000093 01fb      	MOVW R30,R22
000094 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000095 e0e0      	LDI  R30,__GPIOR0_INIT
000096 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000097 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000098 bfed      	OUT  SPL,R30
000099 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009b e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009c e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009d 940c 0159 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                     .equ __lcd_port=0x05
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0009    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
00009f 972c      	SBIW R28,12
0000a0 e08c      	LDI  R24,12
                +
0000a1 e060     +LDI R22 , LOW ( 0 )
0000a2 e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
0000a3 e8e0      	LDI  R30,LOW(_0x3*2)
0000a4 e0f0      	LDI  R31,HIGH(_0x3*2)
0000a5 d2ef      	RCALL __INITLOCB
0000a6 931a      	ST   -Y,R17
                 ;	TableSetup -> Y+1
                 ;	i -> R17
                 ; 0000 000D     SBI __lcd_port-1,__lcd_EN
0000a7 9a21          SBI __lcd_port-1,__lcd_EN
0000a8 9a20          SBI __lcd_port-1,__lcd_RS
0000a9 9a22          SBI __lcd_port-1,__lcd_D4
0000aa 9a23          SBI __lcd_port-1,__lcd_D5
0000ab 9a24          SBI __lcd_port-1,__lcd_D6
0000ac 9a25          SBI __lcd_port-1,__lcd_D7
0000ad e3a2      	LDI  R26,LOW(50)
0000ae e0b0      	LDI  R27,0
0000af d2fe      	RCALL _delay_ms
0000b0 e010      	LDI  R17,LOW(0)
                 _0x5:
0000b1 301c      	CPI  R17,12
0000b2 f470      	BRSH _0x6
0000b3 e0a2      	LDI  R26,LOW(2)
0000b4 e0b0      	LDI  R27,0
0000b5 d2f8      	RCALL _delay_ms
0000b6 2fe1      	MOV  R30,R17
0000b7 e0f0      	LDI  R31,0
0000b8 01de      	MOVW R26,R28
0000b9 9611      	ADIW R26,1
0000ba 0fae      	ADD  R26,R30
0000bb 1fbf      	ADC  R27,R31
0000bc 91ac      	LD   R26,X
0000bd d00d      	RCALL _SendDataBitsLCD
0000be d009      	RCALL _PulseEn
0000bf 5f1f      	SUBI R17,-1
0000c0 cff0      	RJMP _0x5
                 _0x6:
0000c1 e0ec      	LDI  R30,LOW(12)
0000c2 2e4e      	MOV  R4,R30
0000c3 2da4      	MOV  R26,R4
0000c4 d01e      	RCALL _WriteComandLCD
0000c5 8118      	LDD  R17,Y+0
0000c6 962d      	ADIW R28,13
0000c7 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000c8 9a29          SBI __lcd_port,__lcd_EN  // EN=1;
0000c9 9829          CBI __lcd_port,__lcd_EN // EN=0;
0000ca 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000cb 931a      	ST   -Y,R17
0000cc 2f1a      	MOV  R17,R26
                 ;	dato -> R17
0000cd ff13      	SBRS R17,3
0000ce c002      	RJMP _0x7
0000cf 9a2d      	SBI __lcd_port,__lcd_D7
0000d0 c001      	RJMP _0x8
                 _0x7:
0000d1 982d      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000d2 ff12      	SBRS R17,2
0000d3 c002      	RJMP _0x9
0000d4 9a2c      	SBI __lcd_port,__lcd_D6
0000d5 c001      	RJMP _0xA
                 _0x9:
0000d6 982c      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000d7 ff11      	SBRS R17,1
0000d8 c002      	RJMP _0xB
0000d9 9a2b      	SBI __lcd_port,__lcd_D5
0000da c001      	RJMP _0xC
                 _0xB:
0000db 982b      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000dc ff10      	SBRS R17,0
0000dd c002      	RJMP _0xD
0000de 9a2a      	SBI __lcd_port,__lcd_D4
0000df c001      	RJMP _0xE
                 _0xD:
0000e0 982a      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000e1 9119      	LD   R17,Y+
0000e2 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000e3 931a      	ST   -Y,R17
0000e4 930a      	ST   -Y,R16
0000e5 2f0a      	MOV  R16,R26
                 ;	Comando -> R16
                 ;	tempComando -> R17
0000e6 9828      	CBI __lcd_port,__lcd_RS
0000e7 c004      	RJMP _0x2060003
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
0000e8 931a      	ST   -Y,R17
0000e9 930a      	ST   -Y,R16
0000ea 2f0a      	MOV  R16,R26
                 ;	dato -> R16
                 ;	tempdato -> R17
0000eb 9a28      	SBI __lcd_port,__lcd_RS
                 _0x2060003:
0000ec e0a2      	LDI  R26,LOW(2)
0000ed e0b0      	LDI  R27,0
0000ee d2bf      	RCALL _delay_ms
0000ef 2fe0      	MOV  R30,R16
0000f0 7fe0      	ANDI R30,LOW(0xF0)
0000f1 2f1e      	MOV  R17,R30
0000f2 9512      	SWAP R17
0000f3 701f      	ANDI R17,0xF
0000f4 2fa1      	MOV  R26,R17
0000f5 dfd5      	RCALL _SendDataBitsLCD
0000f6 dfd1      	RCALL _PulseEn
0000f7 2fe0      	MOV  R30,R16
0000f8 70ef      	ANDI R30,LOW(0xF)
0000f9 2f1e      	MOV  R17,R30
0000fa 2fa1      	MOV  R26,R17
0000fb dfcf      	RCALL _SendDataBitsLCD
0000fc e0a2      	LDI  R26,LOW(2)
0000fd e0b0      	LDI  R27,0
0000fe d2af      	RCALL _delay_ms
0000ff dfc8      	RCALL _PulseEn
000100 9109      	LD   R16,Y+
000101 9119      	LD   R17,Y+
000102 9508      	RET
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
000103 d285      	RCALL __SAVELOCR4
000104 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
000105 e010      	LDI  R17,LOW(0)
                 _0x10:
000106 d244      	RCALL SUBOPT_0x0
000107 91a4      	LPM  R26,Z
000108 dfdf      	RCALL _CharLCD
000109 2fe1      	MOV  R30,R17
00010a e0f0      	LDI  R31,0
00010b 0fe2      	ADD  R30,R18
00010c 1ff3      	ADC  R31,R19
00010d 91e4      	LPM  R30,Z
00010e 30e0      	CPI  R30,0
00010f f7b1      	BRNE _0x10
000110 c00a      	RJMP _0x2060002
                 ; .FEND
                 ;	Mensaje -> R20,R21
                 ;	tiempo -> R18,R19
                 ;	i -> R17
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
000111 d277      	RCALL __SAVELOCR4
000112 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
000113 e010      	LDI  R17,LOW(0)
                 _0x16:
000114 d236      	RCALL SUBOPT_0x0
000115 81a0      	LD   R26,Z
000116 dfd1      	RCALL _CharLCD
000117 d239      	RCALL SUBOPT_0x1
000118 91ec      	LD   R30,X
000119 30e0      	CPI  R30,0
00011a f7c9      	BRNE _0x16
                 _0x2060002:
00011b d274      	RCALL __LOADLOCR4
00011c 9624      	ADIW R28,4
00011d 9508      	RET
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
00011e 931a      	ST   -Y,R17
00011f 930a      	ST   -Y,R16
000120 2f1a      	MOV  R17,R26
000121 810a      	LDD  R16,Y+2
                 ;	x -> R16
                 ;	y -> R17
000122 2fe1      	MOV  R30,R17
000123 e0f0      	LDI  R31,0
000124 9730      	SBIW R30,0
000125 f419      	BRNE _0x1B
000126 2fa0      	MOV  R26,R16
000127 58a0      	SUBI R26,-LOW(128)
000128 c014      	RJMP _0x38
                 _0x1B:
000129 30e1      	CPI  R30,LOW(0x1)
00012a e0a0      	LDI  R26,HIGH(0x1)
00012b 07fa      	CPC  R31,R26
00012c f419      	BRNE _0x1C
00012d 2fa0      	MOV  R26,R16
00012e 54a0      	SUBI R26,-LOW(192)
00012f c00d      	RJMP _0x38
                 _0x1C:
000130 30e2      	CPI  R30,LOW(0x2)
000131 e0a0      	LDI  R26,HIGH(0x2)
000132 07fa      	CPC  R31,R26
000133 f419      	BRNE _0x1D
000134 2fa0      	MOV  R26,R16
000135 56ac      	SUBI R26,-LOW(148)
000136 c006      	RJMP _0x38
                 _0x1D:
000137 30e3      	CPI  R30,LOW(0x3)
000138 e0a0      	LDI  R26,HIGH(0x3)
000139 07fa      	CPC  R31,R26
00013a f419      	BRNE _0x1A
00013b 2fa0      	MOV  R26,R16
00013c 52ac      	SUBI R26,-LOW(212)
                 _0x38:
00013d dfa5      	RCALL _WriteComandLCD
                 _0x1A:
00013e 8119      	LDD  R17,Y+1
00013f 8108      	LDD  R16,Y+0
000140 9623      	ADIW R28,3
000141 9508      	RET
                 ; .FEND
                 _CreateChar:
                 ; .FSTART _CreateChar
000142 d246      	RCALL __SAVELOCR4
000143 019d      	MOVW R18,R26
000144 810c      	LDD  R16,Y+4
                 ;	NoCaracter -> R16
                 ;	datos -> R18,R19
                 ;	i -> R17
000145 2fe0      	MOV  R30,R16
000146 0fee      	LSL  R30
000147 0fee      	LSL  R30
000148 0fee      	LSL  R30
000149 5ce0      	SUBI R30,-LOW(64)
00014a 2fae      	MOV  R26,R30
00014b df97      	RCALL _WriteComandLCD
00014c e010      	LDI  R17,LOW(0)
                 _0x20:
00014d 3018      	CPI  R17,8
00014e f428      	BRSH _0x21
00014f d201      	RCALL SUBOPT_0x1
000150 91ac      	LD   R26,X
000151 df96      	RCALL _CharLCD
000152 5f1f      	SUBI R17,-1
000153 cff9      	RJMP _0x20
                 _0x21:
000154 e8a0      	LDI  R26,LOW(128)
000155 df8d      	RCALL _WriteComandLCD
000156 d239      	RCALL __LOADLOCR4
000157 9625      	ADIW R28,5
000158 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 ;void main(void)
                 ; 0000 0036 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0037 SetupLCD();
000159 df45      	RCALL _SetupLCD
                 ; 0000 0038 PORTD.0 = 1; //Pullup in PD0
00015a 9a58      	SBI  0xB,0
                 ; 0000 0039 PORTD.1 = 1; //Pullup in PD1
00015b 9a59      	SBI  0xB,1
                 ; 0000 003A CreateChar(0,yo);
00015c e0e0      	LDI  R30,LOW(0)
00015d 93ea      	ST   -Y,R30
00015e e1a1      	LDI  R26,LOW(_yo)
00015f e0b3      	LDI  R27,HIGH(_yo)
000160 dfe1      	RCALL _CreateChar
                 ; 0000 003B CreateChar(1,yo2);
000161 e0e1      	LDI  R30,LOW(1)
000162 93ea      	ST   -Y,R30
000163 e1a9      	LDI  R26,LOW(_yo2)
000164 e0b3      	LDI  R27,HIGH(_yo2)
000165 dfdc      	RCALL _CreateChar
                 ; 0000 003C CreateChar(2,arbol);
000166 e0e2      	LDI  R30,LOW(2)
000167 93ea      	ST   -Y,R30
000168 e2a1      	LDI  R26,LOW(_arbol)
000169 e0b3      	LDI  R27,HIGH(_arbol)
00016a dfd7      	RCALL _CreateChar
                 ; 0000 003D CreateChar(3,flor);
00016b e0e3      	LDI  R30,LOW(3)
00016c 93ea      	ST   -Y,R30
00016d e2a9      	LDI  R26,LOW(_flor)
00016e e0b3      	LDI  R27,HIGH(_flor)
00016f dfd2      	RCALL _CreateChar
                 ; 0000 003E while (1)
                 _0x2A:
                 ; 0000 003F {
                 ; 0000 0040 sprintf(cadena, "%02i:%02i.%i", min, seg, dec);
000170 e0e0      	LDI  R30,LOW(_cadena)
000171 e0f3      	LDI  R31,HIGH(_cadena)
000172 93fa      	ST   -Y,R31
000173 93ea      	ST   -Y,R30
                +
000174 eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000175 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000176 93fa      	ST   -Y,R31
000177 93ea      	ST   -Y,R30
000178 2de3      	MOV  R30,R3
000179 d1dc      	RCALL SUBOPT_0x2
00017a 2de6      	MOV  R30,R6
00017b d1da      	RCALL SUBOPT_0x2
00017c 2de5      	MOV  R30,R5
00017d d1d8      	RCALL SUBOPT_0x2
00017e e08c      	LDI  R24,12
00017f d17b      	RCALL _sprintf
000180 9660      	ADIW R28,16
                 ; 0000 0041 MoveCursor(4,0);
000181 e0e4      	LDI  R30,LOW(4)
000182 93ea      	ST   -Y,R30
000183 e0a0      	LDI  R26,LOW(0)
000184 df99      	RCALL _MoveCursor
                 ; 0000 0042 StringLCDVar(cadena);
000185 e0a0      	LDI  R26,LOW(_cadena)
000186 e0b3      	LDI  R27,HIGH(_cadena)
000187 df89      	RCALL _StringLCDVar
                 ; 0000 0043 delay_ms(62);
000188 e3ae      	LDI  R26,LOW(62)
000189 e0b0      	LDI  R27,0
00018a d223      	RCALL _delay_ms
                 ; 0000 0044 delay_us(520);
                +
00018b e280     +LDI R24 , LOW ( 2080 )
00018c e098     +LDI R25 , HIGH ( 2080 )
                +__DELAY_USW_LOOP :
00018d 9701     +SBIW R24 , 1
00018e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 2080
                 ; 0000 0045 if (PIND.0 == 0)
00018f 9b48      	SBIS 0x9,0
                 ; 0000 0046 ++dec;
000190 9453      	INC  R5
                 ; 0000 0047 if (PIND.1 == 0){
000191 9949      	SBIC 0x9,1
000192 c003      	RJMP _0x2E
                 ; 0000 0048 dec = 0;
000193 2455      	CLR  R5
                 ; 0000 0049 min = 0;
000194 2433      	CLR  R3
                 ; 0000 004A seg = 0;
000195 2466      	CLR  R6
                 ; 0000 004B }
                 ; 0000 004C if (dec == 10){
                 _0x2E:
000196 e0ea      	LDI  R30,LOW(10)
000197 15e5      	CP   R30,R5
000198 f411      	BRNE _0x2F
                 ; 0000 004D dec = 0;
000199 2455      	CLR  R5
                 ; 0000 004E ++seg;
00019a 9463      	INC  R6
                 ; 0000 004F }
                 ; 0000 0050 if (seg == 0){
                 _0x2F:
00019b 2066      	TST  R6
00019c f411      	BRNE _0x30
                 ; 0000 0051 seg = 0;
00019d 2466      	CLR  R6
                 ; 0000 0052 ++min;
00019e 9433      	INC  R3
                 ; 0000 0053 }
                 ; 0000 0054 if (min = 60)
                 _0x30:
00019f e3ec      	LDI  R30,LOW(60)
0001a0 2e3e      	MOV  R3,R30
0001a1 30e0      	CPI  R30,0
0001a2 f009      	BREQ _0x31
                 ; 0000 0055 min = 0;
0001a3 2433      	CLR  R3
                 ; 0000 0056 
                 ; 0000 0057 }
                 _0x31:
0001a4 cfcb      	RJMP _0x2A
                 ; 0000 0058 if (dec>0)
                 ; 0000 0059 {
                 ; 0000 005A contF++;
                 ; 0000 005B cont++;
                 ; 0000 005C if (cont>16)
                 ; 0000 005D cont=0;
                 ; 0000 005E if (contF>16)
                 ; 0000 005F cont=0;
                 ; 0000 0060 MoveCursor(0,1);
                 ; 0000 0061 StringLCD("      ");
                 ; 0000 0062 MoveCursor(cont,1);
                 ; 0000 0063 CharLCD(2);
                 ; 0000 0064 MoveCursor(contF,1);
                 ; 0000 0065 CharLCD(2);
                 ; 0000 0066 MoveCursor(5,1);
                 ; 0000 0067 if(dec%2==0)
                 ; 0000 0068 CharLCD(0);
                 ; 0000 0069 else
                 _0x35:
                 ; 0000 006A CharLCD(1);
0001a5 e0a1      	LDI  R26,LOW(1)
                 _0x39:
0001a6 df41      	RCALL _CharLCD
                 ; 0000 006B 
                 ; 0000 006C }
                 ; 0000 006D //    if (dec == 0) {
                 ; 0000 006E //        //Mover cursor
                 ; 0000 006F //        //poner monito 1
                 ; 0000 0070 //        // Prohibido poner delays
                 ; 0000 0071 //        //para quitar animacion se pone un espacio
                 ; 0000 0072 //
                 ; 0000 0073 //    }
                 ; 0000 0074 //    if (dec == 5) {
                 ; 0000 0075 //        //Mover cursor
                 ; 0000 0076 //        //poner monito 2
                 ; 0000 0077 //
                 ; 0000 0078 //    }
                 ; 0000 0079 }
                 _0x37:
0001a7 cfff      	RJMP _0x37
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0001a8 d1de      	RCALL __SAVELOCR6
0001a9 019d      	MOVW R18,R26
0001aa 815e      	LDD  R21,Y+6
0001ab 9612      	ADIW R26,2
                +
0001ac 91ed     +LD R30 , X +
0001ad 91fc     +LD R31 , X
0001ae 9711     +SBIW R26 , 1
                 	__GETW1P
0001af 9730      	SBIW R30,0
0001b0 f0e9      	BREQ _0x2000016
0001b1 01d9      	MOVW R26,R18
0001b2 d1ac      	RCALL SUBOPT_0x4
0001b3 018f      	MOVW R16,R30
0001b4 9730      	SBIW R30,0
0001b5 f059      	BREQ _0x2000018
                +
0001b6 3002     +CPI R16 , LOW ( 2 )
0001b7 e0e0     +LDI R30 , HIGH ( 2 )
0001b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001b9 f060      	BRLO _0x2000019
0001ba 01f8      	MOVW R30,R16
0001bb 9731      	SBIW R30,1
0001bc 018f      	MOVW R16,R30
                +
0001bd 01d9     +MOVW R26 , R18
0001be 9614     +ADIW R26 , 4
0001bf 93ed     +ST X + , R30
0001c0 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000018:
0001c1 01d9      	MOVW R26,R18
0001c2 9612      	ADIW R26,2
0001c3 d1a0      	RCALL SUBOPT_0x5
0001c4 9731      	SBIW R30,1
0001c5 8350      	ST   Z,R21
                 _0x2000019:
0001c6 01d9      	MOVW R26,R18
                +
0001c7 91ed     +LD R30 , X +
0001c8 91fc     +LD R31 , X
0001c9 9711     +SBIW R26 , 1
                 	__GETW1P
0001ca 23ff      	TST  R31
0001cb f00a      	BRMI _0x200001A
0001cc d197      	RCALL SUBOPT_0x5
                 _0x200001A:
0001cd c005      	RJMP _0x200001B
                 _0x2000016:
0001ce 01d9      	MOVW R26,R18
0001cf efef      	LDI  R30,LOW(65535)
0001d0 efff      	LDI  R31,HIGH(65535)
0001d1 93ed      	ST   X+,R30
0001d2 93fc      	ST   X,R31
                 _0x200001B:
0001d3 d1ba      	RCALL __LOADLOCR6
0001d4 9627      	ADIW R28,7
0001d5 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001d6 93ba      	ST   -Y,R27
0001d7 93aa      	ST   -Y,R26
0001d8 9726      	SBIW R28,6
0001d9 d1ad      	RCALL __SAVELOCR6
0001da e010      	LDI  R17,0
0001db 85ac      	LDD  R26,Y+12
0001dc 85bd      	LDD  R27,Y+12+1
0001dd e0e0      	LDI  R30,LOW(0)
0001de e0f0      	LDI  R31,HIGH(0)
0001df 93ed      	ST   X+,R30
0001e0 93fc      	ST   X,R31
                 _0x200001C:
0001e1 89ea      	LDD  R30,Y+18
0001e2 89fb      	LDD  R31,Y+18+1
0001e3 9631      	ADIW R30,1
0001e4 8bea      	STD  Y+18,R30
0001e5 8bfb      	STD  Y+18+1,R31
0001e6 9731      	SBIW R30,1
0001e7 91e4      	LPM  R30,Z
0001e8 2f2e      	MOV  R18,R30
0001e9 30e0      	CPI  R30,0
0001ea f409      	BRNE PC+2
0001eb c108      	RJMP _0x200001E
0001ec 2fe1      	MOV  R30,R17
0001ed 30e0      	CPI  R30,0
0001ee f431      	BRNE _0x2000022
0001ef 3225      	CPI  R18,37
0001f0 f411      	BRNE _0x2000023
0001f1 e011      	LDI  R17,LOW(1)
0001f2 c001      	RJMP _0x2000024
                 _0x2000023:
0001f3 d176      	RCALL SUBOPT_0x6
                 _0x2000024:
0001f4 c0fe      	RJMP _0x2000021
                 _0x2000022:
0001f5 30e1      	CPI  R30,LOW(0x1)
0001f6 f4a1      	BRNE _0x2000025
0001f7 3225      	CPI  R18,37
0001f8 f411      	BRNE _0x2000026
0001f9 d170      	RCALL SUBOPT_0x6
0001fa c0f7      	RJMP _0x20000D2
                 _0x2000026:
0001fb e012      	LDI  R17,LOW(2)
0001fc e040      	LDI  R20,LOW(0)
0001fd e000      	LDI  R16,LOW(0)
0001fe 322d      	CPI  R18,45
0001ff f411      	BRNE _0x2000027
000200 e001      	LDI  R16,LOW(1)
000201 c0f1      	RJMP _0x2000021
                 _0x2000027:
000202 322b      	CPI  R18,43
000203 f411      	BRNE _0x2000028
000204 e24b      	LDI  R20,LOW(43)
000205 c0ed      	RJMP _0x2000021
                 _0x2000028:
000206 3220      	CPI  R18,32
000207 f411      	BRNE _0x2000029
000208 e240      	LDI  R20,LOW(32)
000209 c0e9      	RJMP _0x2000021
                 _0x2000029:
00020a c002      	RJMP _0x200002A
                 _0x2000025:
00020b 30e2      	CPI  R30,LOW(0x2)
00020c f439      	BRNE _0x200002B
                 _0x200002A:
00020d e050      	LDI  R21,LOW(0)
00020e e013      	LDI  R17,LOW(3)
00020f 3320      	CPI  R18,48
000210 f411      	BRNE _0x200002C
000211 6800      	ORI  R16,LOW(128)
000212 c0e0      	RJMP _0x2000021
                 _0x200002C:
000213 c003      	RJMP _0x200002D
                 _0x200002B:
000214 30e3      	CPI  R30,LOW(0x3)
000215 f009      	BREQ PC+2
000216 c0dc      	RJMP _0x2000021
                 _0x200002D:
000217 3320      	CPI  R18,48
000218 f010      	BRLO _0x2000030
000219 332a      	CPI  R18,58
00021a f008      	BRLO _0x2000031
                 _0x2000030:
00021b c007      	RJMP _0x200002F
                 _0x2000031:
00021c e0aa      	LDI  R26,LOW(10)
00021d 9f5a      	MUL  R21,R26
00021e 2d50      	MOV  R21,R0
00021f 2fe2      	MOV  R30,R18
000220 53e0      	SUBI R30,LOW(48)
000221 0f5e      	ADD  R21,R30
000222 c0d0      	RJMP _0x2000021
                 _0x200002F:
000223 2fe2      	MOV  R30,R18
000224 36e3      	CPI  R30,LOW(0x63)
000225 f439      	BRNE _0x2000035
000226 d14a      	RCALL SUBOPT_0x7
000227 89e8      	LDD  R30,Y+16
000228 89f9      	LDD  R31,Y+16+1
000229 81a4      	LDD  R26,Z+4
00022a 93aa      	ST   -Y,R26
00022b d14b      	RCALL SUBOPT_0x8
00022c c0c5      	RJMP _0x2000036
                 _0x2000035:
00022d 37e3      	CPI  R30,LOW(0x73)
00022e f429      	BRNE _0x2000038
00022f d141      	RCALL SUBOPT_0x7
000230 d14c      	RCALL SUBOPT_0x9
000231 d100      	RCALL _strlen
000232 2f1e      	MOV  R17,R30
000233 c007      	RJMP _0x2000039
                 _0x2000038:
000234 37e0      	CPI  R30,LOW(0x70)
000235 f449      	BRNE _0x200003B
000236 d13a      	RCALL SUBOPT_0x7
000237 d145      	RCALL SUBOPT_0x9
000238 d105      	RCALL _strlenf
000239 2f1e      	MOV  R17,R30
00023a 6008      	ORI  R16,LOW(8)
                 _0x2000039:
00023b 6002      	ORI  R16,LOW(2)
00023c 770f      	ANDI R16,LOW(127)
00023d e030      	LDI  R19,LOW(0)
00023e c037      	RJMP _0x200003C
                 _0x200003B:
00023f 36e4      	CPI  R30,LOW(0x64)
000240 f011      	BREQ _0x200003F
000241 36e9      	CPI  R30,LOW(0x69)
000242 f411      	BRNE _0x2000040
                 _0x200003F:
000243 6004      	ORI  R16,LOW(4)
000244 c002      	RJMP _0x2000041
                 _0x2000040:
000245 37e5      	CPI  R30,LOW(0x75)
000246 f431      	BRNE _0x2000042
                 _0x2000041:
000247 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000248 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000249 83ee      	STD  Y+6,R30
00024a 83ff      	STD  Y+6+1,R31
00024b e015      	LDI  R17,LOW(5)
00024c c00c      	RJMP _0x2000043
                 _0x2000042:
00024d 35e8      	CPI  R30,LOW(0x58)
00024e f411      	BRNE _0x2000045
00024f 6008      	ORI  R16,LOW(8)
000250 c003      	RJMP _0x2000046
                 _0x2000045:
000251 37e8      	CPI  R30,LOW(0x78)
000252 f009      	BREQ PC+2
000253 c09e      	RJMP _0x2000077
                 _0x2000046:
000254 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000255 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000256 83ee      	STD  Y+6,R30
000257 83ff      	STD  Y+6+1,R31
000258 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000259 ff02      	SBRS R16,2
00025a c015      	RJMP _0x2000048
00025b d115      	RCALL SUBOPT_0x7
00025c 89a8      	LDD  R26,Y+16
00025d 89b9      	LDD  R27,Y+16+1
00025e 9614      	ADIW R26,4
00025f 91ed      	LD   R30,X+
000260 91fd      	LD   R31,X+
000261 87ea      	STD  Y+10,R30
000262 87fb      	STD  Y+10+1,R31
000263 85ab      	LDD  R26,Y+11
000264 23aa      	TST  R26
000265 f422      	BRPL _0x2000049
000266 d13a      	RCALL __ANEGW1
000267 87ea      	STD  Y+10,R30
000268 87fb      	STD  Y+10+1,R31
000269 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
00026a 3040      	CPI  R20,0
00026b f011      	BREQ _0x200004A
00026c 5f1f      	SUBI R17,-LOW(1)
00026d c001      	RJMP _0x200004B
                 _0x200004A:
00026e 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
00026f c006      	RJMP _0x200004C
                 _0x2000048:
000270 d100      	RCALL SUBOPT_0x7
000271 89a8      	LDD  R26,Y+16
000272 89b9      	LDD  R27,Y+16+1
000273 d0eb      	RCALL SUBOPT_0x4
000274 87ea      	STD  Y+10,R30
000275 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
000276 fd00      	SBRC R16,0
000277 c010      	RJMP _0x200004D
                 _0x200004E:
000278 1715      	CP   R17,R21
000279 f470      	BRSH _0x2000050
00027a ff07      	SBRS R16,7
00027b c008      	RJMP _0x2000051
00027c ff02      	SBRS R16,2
00027d c004      	RJMP _0x2000052
00027e 7f0b      	ANDI R16,LOW(251)
00027f 2f24      	MOV  R18,R20
000280 5011      	SUBI R17,LOW(1)
000281 c001      	RJMP _0x2000053
                 _0x2000052:
000282 e320      	LDI  R18,LOW(48)
                 _0x2000053:
000283 c001      	RJMP _0x2000054
                 _0x2000051:
000284 e220      	LDI  R18,LOW(32)
                 _0x2000054:
000285 d0e4      	RCALL SUBOPT_0x6
000286 5051      	SUBI R21,LOW(1)
000287 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000288 2f31      	MOV  R19,R17
000289 ff01      	SBRS R16,1
00028a c016      	RJMP _0x2000055
                 _0x2000056:
00028b 3030      	CPI  R19,0
00028c f099      	BREQ _0x2000058
00028d ff03      	SBRS R16,3
00028e c006      	RJMP _0x2000059
00028f 81ee      	LDD  R30,Y+6
000290 81ff      	LDD  R31,Y+6+1
000291 9125      	LPM  R18,Z+
000292 83ee      	STD  Y+6,R30
000293 83ff      	STD  Y+6+1,R31
000294 c005      	RJMP _0x200005A
                 _0x2000059:
000295 81ae      	LDD  R26,Y+6
000296 81bf      	LDD  R27,Y+6+1
000297 912d      	LD   R18,X+
000298 83ae      	STD  Y+6,R26
000299 83bf      	STD  Y+6+1,R27
                 _0x200005A:
00029a d0cf      	RCALL SUBOPT_0x6
00029b 3050      	CPI  R21,0
00029c f009      	BREQ _0x200005B
00029d 5051      	SUBI R21,LOW(1)
                 _0x200005B:
00029e 5031      	SUBI R19,LOW(1)
00029f cfeb      	RJMP _0x2000056
                 _0x2000058:
0002a0 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002a1 e320      	LDI  R18,LOW(48)
0002a2 81ee      	LDD  R30,Y+6
0002a3 81ff      	LDD  R31,Y+6+1
0002a4 d100      	RCALL __GETW1PF
0002a5 87e8      	STD  Y+8,R30
0002a6 87f9      	STD  Y+8+1,R31
0002a7 81ee      	LDD  R30,Y+6
0002a8 81ff      	LDD  R31,Y+6+1
0002a9 9632      	ADIW R30,2
0002aa 83ee      	STD  Y+6,R30
0002ab 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002ac 85e8      	LDD  R30,Y+8
0002ad 85f9      	LDD  R31,Y+8+1
0002ae 85aa      	LDD  R26,Y+10
0002af 85bb      	LDD  R27,Y+10+1
0002b0 17ae      	CP   R26,R30
0002b1 07bf      	CPC  R27,R31
0002b2 f050      	BRLO _0x2000062
0002b3 5f2f      	SUBI R18,-LOW(1)
0002b4 85a8      	LDD  R26,Y+8
0002b5 85b9      	LDD  R27,Y+8+1
0002b6 85ea      	LDD  R30,Y+10
0002b7 85fb      	LDD  R31,Y+10+1
0002b8 1bea      	SUB  R30,R26
0002b9 0bfb      	SBC  R31,R27
0002ba 87ea      	STD  Y+10,R30
0002bb 87fb      	STD  Y+10+1,R31
0002bc cfef      	RJMP _0x2000060
                 _0x2000062:
0002bd 332a      	CPI  R18,58
0002be f028      	BRLO _0x2000063
0002bf ff03      	SBRS R16,3
0002c0 c002      	RJMP _0x2000064
0002c1 5f29      	SUBI R18,-LOW(7)
0002c2 c001      	RJMP _0x2000065
                 _0x2000064:
0002c3 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002c4 fd04      	SBRC R16,4
0002c5 c019      	RJMP _0x2000067
0002c6 3321      	CPI  R18,49
0002c7 f420      	BRSH _0x2000069
0002c8 85a8      	LDD  R26,Y+8
0002c9 85b9      	LDD  R27,Y+8+1
0002ca 9711      	SBIW R26,1
0002cb f409      	BRNE _0x2000068
                 _0x2000069:
0002cc c009      	RJMP _0x20000D3
                 _0x2000068:
0002cd 1753      	CP   R21,R19
0002ce f010      	BRLO _0x200006D
0002cf ff00      	SBRS R16,0
0002d0 c001      	RJMP _0x200006E
                 _0x200006D:
0002d1 c011      	RJMP _0x200006C
                 _0x200006E:
0002d2 e220      	LDI  R18,LOW(32)
0002d3 ff07      	SBRS R16,7
0002d4 c00a      	RJMP _0x200006F
0002d5 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0002d6 6100      	ORI  R16,LOW(16)
0002d7 ff02      	SBRS R16,2
0002d8 c006      	RJMP _0x2000070
0002d9 7f0b      	ANDI R16,LOW(251)
0002da 934a      	ST   -Y,R20
0002db d09b      	RCALL SUBOPT_0x8
0002dc 3050      	CPI  R21,0
0002dd f009      	BREQ _0x2000071
0002de 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0002df d08a      	RCALL SUBOPT_0x6
0002e0 3050      	CPI  R21,0
0002e1 f009      	BREQ _0x2000072
0002e2 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0002e3 5031      	SUBI R19,LOW(1)
0002e4 85a8      	LDD  R26,Y+8
0002e5 85b9      	LDD  R27,Y+8+1
0002e6 9712      	SBIW R26,2
0002e7 f008      	BRLO _0x200005F
0002e8 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002e9 ff00      	SBRS R16,0
0002ea c007      	RJMP _0x2000073
                 _0x2000074:
0002eb 3050      	CPI  R21,0
0002ec f029      	BREQ _0x2000076
0002ed 5051      	SUBI R21,LOW(1)
0002ee e2e0      	LDI  R30,LOW(32)
0002ef 93ea      	ST   -Y,R30
0002f0 d086      	RCALL SUBOPT_0x8
0002f1 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0002f2 e010      	LDI  R17,LOW(0)
                 _0x2000021:
0002f3 ceed      	RJMP _0x200001C
                 _0x200001E:
0002f4 85ac      	LDD  R26,Y+12
0002f5 85bd      	LDD  R27,Y+12+1
0002f6 91ed      	LD   R30,X+
0002f7 91fd      	LD   R31,X+
0002f8 d095      	RCALL __LOADLOCR6
0002f9 9664      	ADIW R28,20
0002fa 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002fb 92ff      	PUSH R15
0002fc 2ef8      	MOV  R15,R24
0002fd 9726      	SBIW R28,6
0002fe d088      	RCALL __SAVELOCR6
0002ff 01fe      	MOVW R30,R28
                +
000300 2400     +CLR R0
000301 0def     +ADD R30 , R15
000302 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000303 8546     +LDD R20 , Z + 14
000304 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000305 2e04      	MOV  R0,R20
000306 2a05      	OR   R0,R21
000307 f419      	BRNE _0x2000078
000308 efef      	LDI  R30,LOW(65535)
000309 efff      	LDI  R31,HIGH(65535)
00030a c023      	RJMP _0x2060001
                 _0x2000078:
00030b 01de      	MOVW R26,R28
00030c 9618      	ADIW R26,8
                +
00030d 2400     +CLR R0
00030e 0daf     +ADD R26 , R15
00030f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000310 018d      	MOVW R16,R26
                +
000311 8748     +STD Y + 8 , R20
000312 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000313 e0e0      	LDI  R30,LOW(0)
000314 87ea      	STD  Y+10,R30
000315 87eb      	STD  Y+10+1,R30
000316 01de      	MOVW R26,R28
000317 961c      	ADIW R26,12
                +
000318 2400     +CLR R0
000319 0daf     +ADD R26 , R15
00031a 1db0     +ADC R27 , R0
                 	__ADDW2R15
00031b 91ed      	LD   R30,X+
00031c 91fd      	LD   R31,X+
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
00031f 931a      	ST   -Y,R17
000320 930a      	ST   -Y,R16
000321 eae8      	LDI  R30,LOW(_put_buff_G100)
000322 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000323 93fa      	ST   -Y,R31
000324 93ea      	ST   -Y,R30
000325 01de      	MOVW R26,R28
000326 961c      	ADIW R26,12
000327 deae      	RCALL __print_G100
000328 019f      	MOVW R18,R30
000329 85a8      	LDD  R26,Y+8
00032a 85b9      	LDD  R27,Y+8+1
00032b e0e0      	LDI  R30,LOW(0)
00032c 93ec      	ST   X,R30
00032d 01f9      	MOVW R30,R18
                 _0x2060001:
00032e d05f      	RCALL __LOADLOCR6
00032f 962c      	ADIW R28,12
000330 90ff      	POP  R15
000331 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000332 93ba      	ST   -Y,R27
000333 93aa      	ST   -Y,R26
000334 91a9          ld   r26,y+
000335 91b9          ld   r27,y+
000336 27ee          clr  r30
000337 27ff          clr  r31
                 strlen0:
000338 916d          ld   r22,x+
000339 2366          tst  r22
00033a f011          breq strlen1
00033b 9631          adiw r30,1
00033c cffb          rjmp strlen0
                 strlen1:
00033d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00033e 93ba      	ST   -Y,R27
00033f 93aa      	ST   -Y,R26
000340 27aa          clr  r26
000341 27bb          clr  r27
000342 91e9          ld   r30,y+
000343 91f9          ld   r31,y+
                 strlenf0:
000344 9005      	lpm  r0,z+
000345 2000          tst  r0
000346 f011          breq strlenf1
000347 9611          adiw r26,1
000348 cffb          rjmp strlenf0
                 strlenf1:
000349 01fd          movw r30,r26
00034a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _cadena:
000300           	.BYTE 0x11
                 _yo:
000311           	.BYTE 0x8
                 _yo2:
000319           	.BYTE 0x8
                 _arbol:
000321           	.BYTE 0x8
                 _flor:
000329           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00034b 2fe1      	MOV  R30,R17
00034c 5f1f      	SUBI R17,-1
00034d e0f0      	LDI  R31,0
00034e 0fe2      	ADD  R30,R18
00034f 1ff3      	ADC  R31,R19
000350 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000351 01d9      	MOVW R26,R18
000352 27ee      	CLR  R30
000353 0fa1      	ADD  R26,R17
000354 1fbe      	ADC  R27,R30
000355 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
000356 27ff      	CLR  R31
000357 2766      	CLR  R22
000358 2777      	CLR  R23
000359 d04f      	RCALL __PUTPARD1
00035a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00035b e0a1      	LDI  R26,LOW(1)
00035c ddc1      	RCALL _MoveCursor
00035d e0a2      	LDI  R26,LOW(2)
00035e cd89      	RJMP _CharLCD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00035f 9614      	ADIW R26,4
                +
000360 91ed     +LD R30 , X +
000361 91fc     +LD R31 , X
000362 9711     +SBIW R26 , 1
                 	__GETW1P
000363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000364 91ed      	LD   R30,X+
000365 91fd      	LD   R31,X+
000366 9631      	ADIW R30,1
000367 93fe      	ST   -X,R31
000368 93ee      	ST   -X,R30
000369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6:
00036a 932a      	ST   -Y,R18
00036b 85ad      	LDD  R26,Y+13
00036c 85be      	LDD  R27,Y+13+1
00036d 85ef      	LDD  R30,Y+15
00036e 89f8      	LDD  R31,Y+15+1
00036f 9509      	ICALL
000370 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7:
000371 89e8      	LDD  R30,Y+16
000372 89f9      	LDD  R31,Y+16+1
000373 9734      	SBIW R30,4
000374 8be8      	STD  Y+16,R30
000375 8bf9      	STD  Y+16+1,R31
000376 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000377 85ad      	LDD  R26,Y+13
000378 85be      	LDD  R27,Y+13+1
000379 85ef      	LDD  R30,Y+15
00037a 89f8      	LDD  R31,Y+15+1
00037b 9509      	ICALL
00037c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
00037d 89a8      	LDD  R26,Y+16
00037e 89b9      	LDD  R27,Y+16+1
00037f 9614      	ADIW R26,4
000380 91ed      	LD   R30,X+
000381 91fd      	LD   R31,X+
000382 83ee      	STD  Y+6,R30
000383 83ff      	STD  Y+6+1,R31
000384 81ae      	LDD  R26,Y+6
000385 81bf      	LDD  R27,Y+6+1
000386 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000387 935a      	ST   -Y,R21
                 __SAVELOCR5:
000388 934a      	ST   -Y,R20
                 __SAVELOCR4:
000389 933a      	ST   -Y,R19
                 __SAVELOCR3:
00038a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00038b 931a      	ST   -Y,R17
00038c 930a      	ST   -Y,R16
00038d 9508      	RET
                 
                 __LOADLOCR6:
00038e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00038f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000390 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000391 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000392 8119      	LDD  R17,Y+1
000393 8108      	LD   R16,Y
000394 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000395 93af      	PUSH R26
000396 93bf      	PUSH R27
000397 01db      	MOVW R26,R22
000398 0fac      	ADD  R26,R28
000399 1fbd      	ADC  R27,R29
                 __INITLOC0:
00039a 9005      	LPM  R0,Z+
00039b 920d      	ST   X+,R0
00039c 958a      	DEC  R24
00039d f7e1      	BRNE __INITLOC0
00039e 91bf      	POP  R27
00039f 91af      	POP  R26
0003a0 9508      	RET
                 
                 __ANEGW1:
0003a1 95f1      	NEG  R31
0003a2 95e1      	NEG  R30
0003a3 40f0      	SBCI R31,0
0003a4 9508      	RET
                 
                 __GETW1PF:
0003a5 9005      	LPM  R0,Z+
0003a6 91f4      	LPM  R31,Z
0003a7 2de0      	MOV  R30,R0
0003a8 9508      	RET
                 
                 __PUTPARD1:
0003a9 937a      	ST   -Y,R23
0003aa 936a      	ST   -Y,R22
0003ab 93fa      	ST   -Y,R31
0003ac 93ea      	ST   -Y,R30
0003ad 9508      	RET
                 
                 _delay_ms:
0003ae 9610      	adiw r26,0
0003af f039      	breq __delay_ms1
                 __delay_ms0:
0003b0 95a8      	wdr
                +
0003b1 ea80     +LDI R24 , LOW ( 0xFA0 )
0003b2 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
0003b3 9701     +SBIW R24 , 1
0003b4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
0003b5 9711      	sbiw r26,1
0003b6 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003b7 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328 register use summary:
r0 :  19 r1 :   1 r2 :   0 r3 :   5 r4 :   2 r5 :   5 r6 :   5 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  48 r17:  53 r18:  41 r19:  10 r20:  12 r21:  22 r22:   8 r23:   3 
r24:  15 r25:   4 r26: 114 r27:  42 r28:  18 r29:   2 r30: 167 r31:  71 
x  :  34 y  : 141 z  :  20 
Registers used: 26 out of 35 (74.3%)

ATmega328 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :   9 
adiw  :  24 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  33 brpl  :   1 brsh  :   4 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   5 cpi   :  38 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   3 jmp   :  27 ld    :  30 ldd   :  63 ldi   : 109 
lds   :   0 lpm   :  19 lsl   :   3 lsr   :   0 mov   :  38 movw  :  26 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   6 out   :   6 pop   :   3 push  :   3 rcall :  72 ret   :  28 
reti  :   0 rjmp  :  71 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  14 sbic  :   1 sbis  :   1 sbiw  :  21 sbr   :   0 sbrc  :   2 
sbrs  :  14 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  57 std   :  30 sts   :   0 sub   :   1 subi  :  21 swap  :   1 
tst   :   5 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega328 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000770   1784    120   1904   32768   5.8%
[.dseg] 0x000100 0x000331      0     49     49    2048   2.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
